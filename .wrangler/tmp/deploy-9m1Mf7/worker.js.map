{
  "version": 3,
  "sources": ["../../../worker.js"],
  "sourceRoot": "E:\\Project\\blog\\.wrangler\\tmp\\deploy-9m1Mf7",
  "sourcesContent": ["// Cloudflare Worker - OAuth + \u53CD\u5411\u4EE3\u7406\nfunction renderBody(status, content) {\n  const html = `\n  <!DOCTYPE html>\n  <html>\n  <head><title>Authorizing...</title></head>\n  <body>\n    <p>Authorizing with GitHub...</p>\n    <script>\n      const receiveMessage = (message) => {\n        window.opener.postMessage(\n          'authorization:github:${status}:${JSON.stringify(content)}',\n          message.origin\n        );\n        window.removeEventListener(\"message\", receiveMessage, false);\n      }\n      window.addEventListener(\"message\", receiveMessage, false);\n      window.opener.postMessage(\"authorizing:github\", \"*\");\n    </script>\n  </body>\n  </html>\n  `;\n  return html;\n}\n\nexport default {\n  async fetch(request, env) {\n    const url = new URL(request.url);\n    \n    // \u5904\u7406 OAuth \u8BA4\u8BC1\u8DEF\u7531\n    if (url.pathname === '/api/auth') {\n      const client_id = env.GITHUB_OAUTH_ID || env.GITHUB_CLIENT_ID;\n      \n      try {\n        const redirectUrl = new URL('https://github.com/login/oauth/authorize');\n        redirectUrl.searchParams.set('client_id', client_id);\n        redirectUrl.searchParams.set('redirect_uri', url.origin + '/api/callback');\n        redirectUrl.searchParams.set('scope', 'repo user');\n        redirectUrl.searchParams.set(\n          'state',\n          crypto.getRandomValues(new Uint8Array(12)).join('')\n        );\n        return Response.redirect(redirectUrl.href, 301);\n      } catch (error) {\n        return new Response(error.message, { status: 500 });\n      }\n    }\n    \n    // \u5904\u7406 OAuth \u56DE\u8C03\n    if (url.pathname === '/api/callback') {\n      const client_id = env.GITHUB_OAUTH_ID || env.GITHUB_CLIENT_ID;\n      const client_secret = env.GITHUB_OAUTH_SECRET || env.GITHUB_CLIENT_SECRET;\n      \n      try {\n        const code = url.searchParams.get('code');\n        const response = await fetch(\n          'https://github.com/login/oauth/access_token',\n          {\n            method: 'POST',\n            headers: {\n              'content-type': 'application/json',\n              'user-agent': 'cloudflare-worker-github-oauth',\n              'accept': 'application/json',\n            },\n            body: JSON.stringify({ client_id, client_secret, code }),\n          }\n        );\n        const result = await response.json();\n        \n        if (result.error) {\n          return new Response(renderBody('error', result), {\n            headers: { 'content-type': 'text/html;charset=UTF-8' },\n            status: 401,\n          });\n        }\n        \n        const token = result.access_token;\n        const provider = 'github';\n        const responseBody = renderBody('success', { token, provider });\n        \n        return new Response(responseBody, {\n          headers: { 'content-type': 'text/html;charset=UTF-8' },\n          status: 200,\n        });\n      } catch (error) {\n        return new Response(error.message, {\n          headers: { 'content-type': 'text/html;charset=UTF-8' },\n          status: 500,\n        });\n      }\n    }\n    \n    // \u53CD\u5411\u4EE3\u7406\u5230 Pages\n    const pagesUrl = 'https://blog-37u.pages.dev';\n    const targetUrl = new URL(url.pathname + url.search, pagesUrl);\n    \n    const modifiedRequest = new Request(targetUrl, {\n      method: request.method,\n      headers: request.headers,\n      body: request.body,\n      redirect: 'manual',\n      cf: {\n        // \u7981\u7528Cloudflare\u7F13\u5B58\uFF0C\u59CB\u7EC8\u83B7\u53D6\u6700\u65B0\u5185\u5BB9\n        cacheEverything: false,\n        cacheTtl: 0\n      }\n    });\n    \n    const response = await fetch(modifiedRequest);\n    const modifiedResponse = new Response(response.body, response);\n    \n    // \u8BBE\u7F6ECORS\u548C\u7F13\u5B58\u63A7\u5236\u5934\n    modifiedResponse.headers.set('Access-Control-Allow-Origin', '*');\n    modifiedResponse.headers.set('Cache-Control', 'no-cache, no-store, must-revalidate');\n    modifiedResponse.headers.set('Pragma', 'no-cache');\n    modifiedResponse.headers.set('Expires', '0');\n    \n    return modifiedResponse;\n  }\n};\n"],
  "mappings": "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",
  "names": ["response"]
}
